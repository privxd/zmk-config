/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <1 2>;
        };

        trab {
            bindings = <&kp TAB>;
            key-positions = <13 14>;
        };

        back {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&trans  &kp Q  &kp W  &kp E           &kp R         &kp T        &kp Y    &kp U         &kp I             &kp O    &kp P     &trans
&trans  &kp A  &kp S  &kp D           &kp F         &kp G        &kp H    &kp J         &kp K             &kp L    &kp APOS  &trans
&trans  &kp Z  &kp X  &kp C           &kp V         &kp B        &kp N    &kp M         &kp COMMA         &kp DOT  &kp FSLH  &trans
                      &kp LEFT_SHIFT  &kp LEFT_ALT  &kp SPACE    &kp RET  &kp NUMBER_1  &kp LEFT_CONTROL
            >;
        };

        layer1 {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1  &kp N2     &kp N3          &kp N4    &kp N5       &kp N6     &kp N7     &kp N8    &kp N9     &kp N0    &trans
&trans  &trans  &kp GRAVE  &kp DELETE      &kp HOME  &kp PG_UP    &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT   &kp BSLH  &trans
&trans  &trans  &trans     &kp LEFT_GUI    &kp END   &kp PG_DN    &kp LEFT   &kp UP     &kp DOWN  &kp RIGHT  &trans    &trans
                           &kp LEFT_SHIFT  &to 0     &kp SPACE    &kp RET    &to 2      &kp RALT
            >;
        };

        layer2 {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3          &kp F4           &kp F5        &kp C_BRI_UP          &kp K_UNDO  &kp UP       &kp K_REDO  &kp ESCAPE     &trans
&trans  &kp F6   &kp F7   &kp F8          &kp F9           &kp F10       &kp C_BRIGHTNESS_DEC  &kp LEFT    &kp DOWN     &kp RIGHT   &kp PAGE_UP    &trans
&trans  &kp F11  &kp F12  &kp C_VOL_DN    &kp C_VOLUME_UP  &kp C_MUTE    &kp C_PP              &kp K_COPY  &kp K_PASTE  &kp K_CUT   &kp PAGE_DOWN  &trans
                          &kp LEFT_SHIFT  &to 1            &kp SPACE     &kp ENTER             &to 3       &trans
            >;
        };

        layer3 {
            bindings = <
&trans  &trans         &trans         &trans         &trans         &trans           &trans  &trans      &trans      &trans  &trans      &trans
&trans  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &bt BT_PRV  &bt BT_NXT  &trans  &bt BT_CLR  &trans
&trans  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans      &trans      &trans  &trans      &trans
                                      &trans         &to 2          &trans           &trans  &trans      &trans
            >;
        };
    };
};
